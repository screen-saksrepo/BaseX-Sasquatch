# This file is a template, and might need editing before it works on your project.
# Official docker image.
image: docker:latest

services:
  - docker:dind

stages:
  - test
  - build
  - test-integration
  - deploy

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

build:
  stage: build
  tags:
  - docker
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"

test-xqunit:
  stage: test
  before_script:
    - echo "Running XQunit"
  image: basex/basexhttp:9.0.2
  script:
   - basex -t repo

test-service:
  image: basex/basexhttp:9.0.2
  stage: test-integration
  services:
  - name: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    alias: sasquatch
  
  before_script:
    - echo "Testing Services"
  script:
   - basex -t tests/integration

deploy_dev:
  image: uvatbc/ubuntu:15.10
  stage: deploy
  before_script:
    - echo "Running."
  script:
    - echo "Deploy to staging server"
    # Install ssh-agent if not already installed, it is required by Docker.
    # (change apt-get to yum if you use a CentOS-based image)
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    # Run ssh-agent (inside the build environment)
    - eval $(ssh-agent -s)
    # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    # For Docker builds disable host key checking. Be aware that by adding that
    # you are suspectible to man-in-the-middle attacks.
    # WARNING: Use this only with the Docker executor, if you use it with shell
    # you will overwrite your user's SSH config.
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh basex@109.239.48.124 "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY_IMAGE"
    - ssh basex@109.239.48.124 "docker pull git.dev.basex.org:4567/screen-systems/speech-to-subtitle:master"
    # - scp docker-compose.yml 
    # - ssh basex@109.239.48.124 "docker stack deploy -c docker-compose.yml --with-registry-auth s2s"
    - ssh basex@109.239.48.124 'docker rm -f $(docker ps -q) || echo "Starting new image"'
    - ssh basex@109.239.48.124 'docker run -d --restart=always -p 80:8984 git.dev.basex.org:4567/screen-systems/speech-to-subtitle:master'

  environment:
    name: testing
    url: http://109.239.48.124
  when: on_success
  only:
  - master


